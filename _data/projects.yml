- layout: top-middle
  name: Finding Influencers in Twitter
  link: https://link.springer.com/chapter/10.1007/978-981-13-8676-3_5
  quote: >
    Paper Published in Springer Publication of Computational Intelligence in Data Mining (Proceedings of the International Conference on ICCIDM 2018)
  description: | # this will include new lines to allow paragraphs
    We have considered a small Twitter network comprising of WWE superstars & fans as nodes with directed edges from followers to followees, forming a multiple directed graph. The aim is to analyze the influence of nodes based on parameters such as indegree, distance between the influencer & the
    corresponding followers, source of a tweet (celebrity, organization, etc,), number of retweets, number of mentions, and so on, and to study how different features affect the influence of user.

- layout: top-middle
  name: NLP made using Streamlit Framework
  link: github.com/shubhanshu1995/Streamlit-Machine-Learning-Apps/tree/master/NLP%20App
  github: shubhanshu1995/Streamlit-Machine-Learning-Apps/tree/master/NLP%20App
  quote: >
    Streamlit: An open-source app framework for Machine Learning and Data Science teams. Create beautiful data apps in hours, not weeks. All in pure Python. All for free.
  description: | # this will include new lines to allow paragraphs
     A Natural Language Processing App built with Streamlit Framework using SpaCy for Named Entity Recognition (NER) and tokenization, TextBlob for sentiment analysis and Gensim and Sumy for text Summarization

- layout: top-middle
  name: Cats and Dogs Image Classifier with CNN and Fine Tuning VGG16 model
  link: github.com/shubhanshu1995/Deep-Learning-with-Keras/blob/master/Cats_%26_Dogs_Image_Classifier_with_CNN_and_Fine_tuning_VGG16.ipynb
  github: shubhanshu1995/Deep-Learning-with-Keras/blob/master/Cats_%26_Dogs_Image_Classifier_with_CNN_and_Fine_tuning_VGG16.ipynb
  quote: >
    Deep Learning is a superpower. With it you can make a computer see, synthesize novel art, translate languages, render a medical diagnosis, or build pieces of a car that can drive itself. If that isn’t a superpower, I don’t know what is ~ Andrew Ng
  description: | # this will include new lines to allow paragraphs
     ● I made a CNN Image Classifier of cats and dogs. The model architecture is sequential with one conv2d, one flatten & output layer as dense layer with two units. Dataset contained 40 images in the training set, 16 images in validation set & 10 images in the test set. The training as well as validation accuracy was 50% considering the small amount of dataset and less number of hidden layers in model architecture.

     ● To increase the model accuracy, I fine tuned the VGG16 pretrained model which is basically trained on imagenet dataset consisting of 1000 different categories. After fine tuning the VGG16 model to fit to our cats and dogs dataset, the training accuracy went upto 97.50 % & validation accuracy was 87.50 %.

- layout: top-middle
  name: R-Contracts
  quote: >
    R-Contracts- Legal business contracts life cycle product
  description: | # this will include new lines to allow paragraphs
    ● Worked closely with RIL legal teams; reduced contract processing time from 1 hour to under 10 minutes.
    ● Designed and deployed pipeline for information extraction; Pre-processed, analysed, trained NER and text classifier models to extract information from 200-300 pages long contracts with 75% accuracy. 
    ● Implemented search engine and BERT based question-answering model trained on SQUAD dataset.
    ● Trained One-Shot learning model to implement face recognition login system for web-cam.
    ● Implemented face liveness detector by training classifier using image-depth prediction.
    ● Optimized OCR processing time of scanned legacy contract pdfs by 70%.
    ✔ Concepts & Tools: NLP, Word Embeddings, NER, BERT, DeepPavlov Siamese Network, Async, Multi-threading, Transfer Learning, Python, Keras, SpaCy, NLTK, Dlib, TensorFlow, OpenCV, Mongodb, Flask, Kubernetes.   

- layout: top-middle
  name: Image Prediction with client side neural network using Tensorflow.js
  link: github.com/shubhanshu1995/Image-Prediction-with-client-side-neural-network-using-Tensorflow.js
  github: shubhanshu1995/Image-Prediction-with-client-side-neural-network-using-Tensorflow.js
  quote: >
    TensorFlow.js is a library for developing and training ML models in JavaScript, and deploying in the browser or on Node.js.
  description: | # this will include new lines to allow paragraphs
    I have created a web application to choose an image and submit it to our model. The models used are MobileNet & VGG16. The app will give us back the top five highest predictions for the image from the imageNet classes.
    For hosting the web app, I'm using Express. Express is a minimalistic framework very similar to flask but it's for node.js not for python

- layout: top-middle
  name: Django Weather App
  link: github.com/shubhanshu1995
  github: shubhanshu1995/shubhanshu1995.github.io
  quote: >
    Django: The Web framework for perfectionists with deadlines.
  description: | # this will include new lines to allow paragraphs
    I started this project as a way of learning <mark>Django</mark> and it has since grown into a fully fledged app. I have learned many skills through this project such as file management, user authentication, database management etc.







